uses uOracleDB, uMain, uUtils, uXML, TradeServiceAction, uTSPos, uFireBird, uSetDefaultSettings; 

//Замена строчки на процедуру:
//p := Sys.Process('TradeService2');  
//Вместо этого пишем  p:=pTs;
function pTs: string;
var 
  p: OleVariant;
begin
  try
    Result := Sys.Process('TradeService2');  
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//Замена двух строчек одной процедурой:
//p := Sys.Process('TradeService2');
//w := p.Window('TfrmMain', '*');
//Вместо этого пишем  w:=Ts;
function Ts: string;
var 
  p, w: OleVariant;
begin
  try
    p := pTs;
    Result := p.Window('TfrmMain', '*');   
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;
                                                   
// Вход в систему
procedure LogIn(aLogin, aPassword: string; vDev: string = '');
var
  p, w: OleVariant;
begin
  if vDev = '8' then
  begin
    TestedApps.Items[2].Path := '\TS\TESTDEV' + glTsDelivery + '\';
    TestedApps.Items[2].Parameters := '-localstart';
    p := TestedApps.Items[2].Run; //заходим на 8 трейд
    TestedApps.Items[2].Path := '\TS\TESTDEV' + glTs + '\';
  end
  else
  begin
    p := TestedApps.Items[2].Run;
  end;
    
  If Not p.Exists Then
    Log.Error('Exception', 'Не удалось запустить приложение');

  p := Sys.Process('TradeService2');
  w := p.Window('TfrmLogin', 'Вход в программу');
  w.Activate;    
  Sys.Keys(aLogin);    
  Sys.Keys('[Tab]');
  Sys.Keys(aPassword);       
  Sys.Keys('[Enter]');
   
  w := p.WaitWindow('TfrmErrorDlg', 'Внимание', 1, 3000);
  if w.Exists then                              
  begin                         
    Log.Message('Отмена смены пароля');
    w := p.Window('TfrmErrorDlg', '*');
    w.Activate;  
    Sys.Keys('[Enter]'); 
  end
  else  
    Log.Message('Вход в ТС')                                                                
end;

// логиниться под специалистом сервисной ячейки 
procedure LogInService;    
begin
  LogIn('tcss', 'Qwerty12');
end;

// логиниться под специалистом сервисной ячейки на 8 трейде
procedure LogInServiceDelivery;
begin
  LogIn('tcss', 'Qwerty12', '8');
end;

// логинимся под директором 
procedure LogInDirector;    
begin
  LogIn('tcd', 'Qwerty12');
end;

// логинимся под программистом 
procedure LogInProgrammer;
begin
  LogIn('tcp', 'Qwerty12');
end;

// логинимся под программистом на 8 трейде 
procedure LogInProgrammerDelivery;
begin
  LogIn('tcp', 'Qwerty12', '8');
end;

// логинимся под продавцом
procedure LogInSeller;    
begin
  LogIn('tcs', 'Qwerty12');
end;
                 
// логинимся под кладовщиком 
procedure LogInKlad;    
begin
  LogIn('tckl', 'Qwerty12');
end;

// логинимся под кассиром 
procedure LogInKassir;    
begin
  LogIn('tck', 'Qwerty12');
end;

// логинимся под кассиром на 8 трейде
procedure LogInKassirDelivery;    
begin
  LogIn('tck', 'Qwerty12', '8');
end;

//Выход из приложения TS
procedure LogOut;
begin                         
  //TestedApps.Items[2].Parameters := '-localstart';
  TestedApps.Items[2].Close;
end;

procedure LogOutDelivery;
begin
  TestedApps.Items[2].Path := '\TS\TESTDEV' + glTsDelivery + '\';
  TestedApps.Items[2].Parameters := '-localstart';
  TestedApps.Items[2].Close;
  TestedApps.Items[2].Path := '\TS\TESTDEV' + glTs + '\';  
end;

//Клик по кнопке "далее" в документе
procedure ClickButtonNext;
var 
  w,m: OleVariant; 
begin
  try
    w:=Ts;                                                   
    m := w.Window('TfeChainBaseForm', '*');     
    m.Window('TcxButton', 'Далее >>').Click;
    Sys.Delay(2000); 
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//Клик по кнопке "закрытия" документа
procedure CloseDoc;
var 
  w,m: OleVariant; 
begin
  try
    w:=Ts;                                                   
    w.Window('TfeChainBaseForm', '*').Close;
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//делаем окно документа активным. работает только 
//если документ открыт ОДИН. 
//поэтому например перед открытием ДД следует закрыть окно ЗП процедурой CloseDoc
procedure ActiveDoc;
var 
  w,m: OleVariant; 
begin
  try
    w:=Ts;                                                   
    w.Window('TfeChainBaseForm', '*').Activate;
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//Клик по кнопке "сохранить" в документе
procedure ClickButtonSave;
var 
  w,m: OleVariant; 
begin
  try
    w:=Ts;                                                   
    m := w.Window('TfeChainBaseForm', '*');     
    m.Window('TcxButton', 'Сохранить').Click;
    Sys.Delay(2000);  
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;


//открытие списка приложение через координаты (для всех кроме программиста)
procedure OpenTreeListCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TdxBarControl', 'Панель инструментов').Click(291, 11);
end;

// Открытие окна "список приложений" (для профиля программиста)
procedure OpenTreeList;
var
  p, w: OleVariant;
begin
   w := Ts;
   w := w.WaitWindow('TcxTreeList', '*', 1, 3000);    
   if w.Exists then                                  
     Log.Message('окно "Список приложений" открыто')    
   else
   begin
     Log.Message('открываем окно "Список приложений"');
     w := p.Window('TfrmMain', '*');
     w.Activate;
     //открытие окна "Список приложений"
     OpenTreeListCoordinate;                                             
   end;
end; 

//открытие вкладки "документы " в списке приложений через координаты 
procedure OpenDocCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TcxTreeList').Click(10, 46);  
end;

//открытие вкладки "документы " старшим кассиром в списке приложений через координаты 
procedure OpenDocCoordinateKassir;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TcxTreeList').Click(10, 31);  
end;

//открытие создания АРБ через список приложений через координаты 
procedure OpenArbCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  //w.Window('TcxTreeList').DblClick(89, 191); 
  w.Window('TcxTreeList').DblClick(89, 258); 
end;

//открытие создания УПРОЩЕННОГО АРБ через список приложений через координаты 
procedure OpenUArbCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TcxTreeList').DblClick(89, 273);  
end;

//открытие создания ДД через список приложений через координаты 
procedure OpenDdCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TcxTreeList').DblClick(89, 170);
end; 

//Открытие создания ДО у старшего кассира
procedure OpenDoCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  w.Window('TcxTreeList').DblClick(96, 261);
end;       
 
//открытие создания АВП через список приложений через координаты 
procedure OpenAvpCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;
  w.Window('TcxTreeList').DblClick(56, 440);  
end;

//открытие ветки "реестры" через список приложений через координаты 
procedure ListCoordinate(aLogin: String);
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate; 
  if (aLogin = 'seller') then
    w.Window('TcxTreeList').Click(11, 82)
  else
    w.Window('TcxTreeList').Click(11, 101);         
end;

//открытие  "реестры документов доставки" через список приложений через координаты
procedure ListDdCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;                          
  w.Window('TcxTreeList').DblClick(68, 252);
end;

//открытие  "реестры заказов покупателей" через список приложений через координаты
procedure ListOrderCoordinate(aLogin: String);
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;
  if (aLogin = 'seller') then  
    w.Window('TcxTreeList').DblClick(68, 100)
  else
    w.Window('TcxTreeList').DblClick(68, 137); 
end; 

//открытие  "реестры всех документов" через список приложений через координаты
procedure ListDocCoordinate(aLogin: String);
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;
  if (aLogin = 'seller') then  
    Log.Message('введите в код координаты октрытия реестра всех документов для проадвца')
  else
    w.Window('TcxTreeList').DblClick(68, 121); 
end;   

//открытие  "реестры АРБ" через список приложений через координаты
procedure ListArbCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;                              
  w.Window('TcxTreeList').DblClick(68, 230);  
end;  

//открытие  "реестры веб-заявок" через список приложений через координаты
procedure ListWebCoordinate;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;                   
  w.Window('TcxTreeList').DblClick(68, 372); 
end;

//открытие  "реестры черновиков внутренних перемещений" у кладовщикачерез через координаты
procedure ListInTransfer;
var
  p, w: OleVariant;
begin
  w := Ts;
  w.Activate;                   
  w.Window('TcxTreeList').DblClick(68, 319); 
end;

//открытие  "реестры ДО" через список приложений через координаты  для ССЯ
procedure ListDocPayCoordinate;
var
  p, w: OleVariant;
begin
  p := Sys.Process('TradeService2');
  w := p.Window('TfrmMain', '*');
  w.Activate;                   
  w.Window('TcxTreeList').DblClick(68, 190); 
end;

// Загрузка чеков ИЗ XI. 
procedure UploadXI;
var
  w: OleVariant;
begin
  LogInProgrammer;
  w := Ts;
  w.Activate;
  
  //открытие окна "Список приложений"   
  OpenTreeList;
  w.Window('TcxTreeList').Click(60, 28);
    
  Sys.Clipboard := 'COLLAPSEALL=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Система';
  Sys.Keys('^u');
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Фоновые процедуры';
  Sys.Keys('^u');              
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=XI';
  Sys.Keys('^u');                               
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Импорт XML документов XI';
  Sys.Keys('^u');
  Sys.Delay(1000); 
  Sys.Keys('[Enter]');
  Sys.Delay(30000);
  Sys.Delay(30000);
  LogOut;
end;
 
// Загрузка чеков в TS. Не используем, лучше TestProc
procedure UploadCheques;
var
  p, w: OleVariant;
begin
  LogInProgrammer;
  w := Ts;
  w.Activate;
  w.Window('TcxTreeList').Click(60, 28);
    
  Sys.Clipboard := 'COLLAPSEALL=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Система';
  Sys.Keys('^u');
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Фоновые процедуры';
  Sys.Keys('^u');
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=TSPOS';
  Sys.Keys('^u');
  Sys.Clipboard := 'EXPAND=';
  Sys.Keys('^u');
  Sys.Clipboard := 'SELECTNODE=Загрузка чеков TS POS';
  Sys.Keys('^u');
  Sys.Delay(1000); 
  Sys.Keys('[Enter]');
  Sys.Delay(60000);
  LogOut;
end;

// Проверка наличия ДД в реестре ДД
procedure CheckDelivery(vOrderID: string);
var
  p, w, m: OleVariant;
  str,vListDoc,vDeliveryID: string;
begin
  try     
    // Вход в трейд
    LogInService;
    p := Sys.Process('TradeService2');
    
    // получаем номер последнего созданного ДД для этого пользователя
    vDeliveryID := GetMaxOrder('tcss');
    
    //закрытие окна несобранных заказов 
    w := p.Window('TfrUncollectMessageForm', 'Несобранные заказы');
    w.Activate;   
    w.Window('TButton', 'Отложить').Click;
    Sys.Delay(500);
    w := p.Window('TfrmMain', '*');
    w.Activate; 
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Activate;                             
  
    // открытие реестра ДД
    //открытие окна "Список приложений" 
    OpenTreeListCoordinate;                                            
    ListCoordinate('service');                 
    ListDdCoordinate;                                        
    Sys.Keys('[Enter]');
    m := w.Window('TfeChainBaseForm', 'Реестр документов доставки');
    m.Activate;
    
    // проверяем фильтр
    Sys.Keys('[Tab][Tab][Tab][Tab][Tab][Tab][Tab]123456');
    
    // очищаем фильтр
    Sys.Keys('[Apps][Tab][Enter]');
    Sys.Clipboard := ''; 
    Sys.Keys('^u');
    if (Sys.Clipboard <> '') then
    begin
        Log.Error('CreateZORDR', 'Очистка фильтра не работает!');
    end;       
          
    //ввод номера последнего созданного ДД          
    Sys.Keys(vDeliveryID);
    Sys.Keys('^c');                     
    Sys.Keys('[F8]');
    Sys.Delay(1000);
    
    // проверяем, что ДД есть на вкладке Данные
    Sys.Keys('[Tab][Home][Enter][Enter]^c');
    if (Sys.Clipboard <> vDeliveryID) then
    begin
        Log.Error('CreateZORDR', 'На вкладке "Данные" документ доставки №' + vDeliveryID + ' не найден');
    end;
    
    // проверяем, что заказ есть во взаимосвязи
    Sys.Keys('[Enter][Enter][Enter]^c'); 
    if (Sys.Clipboard <> vOrderID) then
    begin
        Log.Error('CreateZORDR', 'На вкладке "Данные" заказ покупателя №' + vOrderID + ' не найден');
    end;
    
    //выход с трейда
    LogOut;
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;
end;

// Проверка наличия документов и наличия у них во взаимосвязи нужного ЗП, где
// aType - тип документа, например:
//   'ZORDR' - ЗП 
//   'ZADDR' - ДД
//   'RTWORC' - АВП
//   'ZRTRN' - АРБ
procedure CheckListDoc(vOrderID, aType, aUsercode: string);
var
  p, w, m: OleVariant;
  str, vDeliveryID, vListDoc: string;
begin
  try  
    // получаем номер последнего созданного документа для этого пользователя
    vDeliveryID := GetMaxDoc(aType, aUsercode);
      
    //закрытие окна несобранных заказов для ССЯ
    p := Sys.Process('TradeService2');
    if (aUsercode='tcss') then
    begin
      w := p.Window('TfrUncollectMessageForm', 'Несобранные заказы');
      w.Activate;   
      w.Window('TButton', 'Отложить').Click;
      Sys.Delay(500);
    end;
    
    // делаем активным окно ЗП
    w := p.Window('TfrmMain', '*');
    w.Activate; 
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Activate;
    
    // открытие реестра
    //открытие окна "Список приложений"   
    //OpenTreeList;
    OpenTreeListCoordinate;                                            
    
    case aUsercode of
      'tcs' : ListCoordinate('seller');                 
      'tcss' : ListCoordinate('service');               
    else ListCoordinate('service');                 
    end;
  
    w.Window('TcxTreeList').DblClick(68, 100);
    
    // открытие реестра документов    
    case aType of
      'ZORDR' : vListDoc := 'Реестр заказов';
      'ZADDR' : vListDoc := 'Реестр документов доставки';
      'RTWORC','ZRTRN': vListDoc := 'Реестр актов на брак';
    else vListDoc := 'Реестр всех документов'; 
    end; 
                                                                             
    RunTSCommand('SELECTNODE=' +  vListDoc); 
    Sys.Keys('[Enter]');

    m := w.Window('TfeChainBaseForm', vListDoc);
    m.Activate;
    
    // проверяем фильтр
    if (aUsercode='tcss') then
      Sys.Keys('[Tab][Tab][Tab][Tab][Tab]');
   
    
    Sys.Keys('[Tab][Tab][Tab]123456');
    
    // очищаем фильтр
    Sys.Keys('[Apps][Tab][Enter]');
    Sys.Clipboard := ''; 
    Sys.Keys('^u');
    if (Sys.Clipboard <> '') then
    begin
        Log.Error('CreateZORDR', 'Очистка фильтра не работает!');
    end;
              
    //ввод номера последнего созданного ДД          
    Sys.Keys(vDeliveryID);
    Sys.Keys('^c');                     
    Sys.Keys('[F8]');
    Sys.Delay(1000);
    
    // проверяем, что ДД есть на вкладке Данные
    Sys.Keys('[Tab][Home][Enter][Enter]');
    Sys.Keys('^c');
    if (Sys.Clipboard <> vDeliveryID) then
    begin
        Log.Error('CreateZORDR', 'На вкладке "Данные" документ доставки №' + vDeliveryID + ' не найден');
    end;
    
    // проверяем, что заказ есть во взаимосвязи у ДД или АРБ, АВП
    case aType of                     
      'ZADDR' : Sys.Keys('[Enter][Enter][Enter]^c'); 
      'RTWORC','ZRTRN': Sys.Keys('[Enter]^c'); 
    end;        
    
    case aType of 'ZADDR', 'RTWORC', 'ZRTRN': 
      begin  
        if (Sys.Clipboard <> vOrderID) then
          Log.Error('CreateZORDR', 'На вкладке "Данные" документ доставки №' + vOrderID + ' не найден');
      end;
    end;
    
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;
end;

//проверка номера АВП
procedure CheckRefunds;
var
  p, w, m: OleVariant;
  str, vRefundsID,vOrderID:string;
begin
  try     
    // Вход в трейд
    LogInService;
    p := Sys.Process('TradeService2');
    
    //закрытие окна несобранных заказов 
    w := p.Window('TfrUncollectMessageForm', 'Несобранные заказы');
    w.Activate;   
    w.Window('TButton', 'Отложить').Click;
    Sys.Delay(500);
    w := p.Window('TfrmMain', '*');
    w.Activate; 
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Activate;
    
    // открытие реестра АРБ
    OpenTreeListCoordinate;  //открытие окна "Список приложений"                                            
    ListCoordinate('service');                 
    ListArbCoordinate;                                 
    Sys.Keys('[Enter]');
    m := w.Window('TfeChainBaseForm', 'Реестр актов на брак');
    m.Activate;
    
    // проверяем фильтр
    Sys.Keys('[Tab][Tab][Tab][Tab][Tab]123456');
    
    // очищаем фильтр
    Sys.Keys('[Apps][Tab][Enter]');
    Sys.Clipboard := ''; 
    Sys.Keys('^u');
    if (Sys.Clipboard <> '') then
    begin
        Log.Error('CreateZORDR', 'Очистка фильтра не работает!');
    end;
          
    // получаем номер последнего созданного АРБ для этого пользователя
    vRefundsID := GetMaxOrder('tcss'); 
    
    //ввод номера последнего созданного АРБ          
    Sys.Keys(vRefundsID);
    Sys.Keys('^c');                     
    Sys.Keys('[F8]');
    Sys.Delay(1000);
    
    // проверяем, что АРБ есть на вкладке Данные
    Sys.Keys('[Tab][Home][Right][Enter]^c');
    Sys.Delay(1000);
    if (Sys.Clipboard <> vRefundsID) then
    begin
        Log.Error('CreateZORDR', 'На вкладке "Данные" акт на брак №' + vRefundsID + ' не найден');
    end;
    
    // проверяем, что заказ есть во взаимосвязи
    vOrderID := GetMaxOrder('tcs');                                           
    Sys.Keys('[Enter]^c');
    Sys.Delay(1000);
    if (Sys.Clipboard <> vOrderID) then
    begin
        Log.Error('CreateZORDR', 'На вкладке "Данные" ЗП №' + vOrderID + ' во взаимосвязи не найден');
    end;
    
    //выход с трейда
    LogOut; 
    
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;
end;

// *************************************
// Проверка фильтра  
// ******** @--))---- ****************** 
procedure CheckFilter;
begin
  Sys.Keys('123456');  
  // очищаем фильтр
  Sys.Keys('[Apps][Tab][Enter]');
  Sys.Clipboard := ''; 
  Sys.Keys('^u');
  if (Sys.Clipboard <> '') then
  begin
    Log.Error('CreateZORDR', 'Очистка фильтра не работает!');
  end;
end;

// *****************************************************
// Закрытие окна несобранных заказов   
// ***************************************************** 
procedure CloseWindowUncollectedOrders;
var
  p, w: String;
begin
  p := Sys.Process('TradeService2');
  w := p.WaitWindow('TfrUncollectMessageForm', 'Несобранные заказы', 1, 8000);
  if w.Exists then 
  begin        
     Sys.Delay(1000);          
     w := p.WaitWindow('TfrUncollectMessageForm', 'Несобранные заказы');
     w.Activate;
     w.Window('TButton', 'Отложить').Click;
     Sys.Delay(4000); 
  end    
end;    

// *****************************************************
// открытие реестра веб-заявок у ССЯ    
// *****************************************************
procedure OpenWebOrders;
var
  p, w, m: String;
begin                                 
  w := Ts;
  w.Activate; 
  m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
  m.Activate;                           
  //открытие окна "Список приложений"      
  OpenTreeListCoordinate;
  //открытие дерева "реестр"                                            
  ListCoordinate('service');
  //открытие реестра ЗП                                                                         
  ListWebCoordinate;                                          
  Sys.Keys('[Enter]');
end;

// *****************************************************
// открытие реестра заказов у ССЯ    
// *****************************************************
procedure OpenOrders;
var
  p,w,m: String;
begin
  //открытие окна "Список приложений" 
  w := Ts;
  w.Activate; 
  m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
  m.Activate;
  //открытие окна "Список приложений"      
  OpenTreeListCoordinate;
  //открытие дерева "реестр"                                             
  ListCoordinate('service');
  //открытие реестра ЗП                                                                           
  ListOrderCoordinate('service');                                          
  Sys.Keys('[Enter]');
end;

// *****************************************************
// открытие реестра всех документов у ССЯ    
// *****************************************************
procedure OpenDocs;
var
  p,w,m: String;
begin
  //открытие окна "Список приложений" 
  w := Ts;
  w.Activate; 
  m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
  m.Activate;
  //открытие окна "Список приложений"      
  OpenTreeListCoordinate;
  //открытие дерева "реестр"                                             
  ListCoordinate('service');
  //открытие реестра всех документов                                                                           
  ListDocCoordinate('service');                                          
  Sys.Keys('[Enter]');
end;

// *****************************************************
// Поиск веб-заявки в реестре веб-заявок  
// ***************************************************** 
procedure SearchWebOrders(vWebOrder: String; vDev: String = '');
begin
  //ввод номера последней веб-заявки          
  Sys.Keys(vWebOrder);                   
  Sys.Keys('[F8]');
  Sys.Delay(1000);   
  
  // проверяем, что веб-заявка есть на вкладке Данные 
  Sys.Keys('[Tab][Home][Enter][Enter]');
  if vDev = '8' then
    Sys.Keys('[Enter][Enter][Enter][Enter][Enter][Enter][Enter]');
  Sys.Delay(100);    
  Sys.Keys('^c');
  if (Sys.Clipboard <> vWebOrder) then
  begin
      Log.Error('CreateZORDR', 'На вкладке "Данные" веб-заявка не найдена');
  end;                          
end;


// *****************************************************
// Проверка статуса веб-заявки во вкладке "данные" веб-заявок 
// WRQST_ACPT   'WRQST_CRTD'
// ***************************************************** 
function CheckStatusWebOrders(vStatus:String; vDev: String = ''):String;
var
  v: String;  
begin 
  Sys.Keys('[F5][Home][Enter][Enter][Enter][Enter]');
  if vDev <> '8' then
    Sys.Keys('[Enter]');
  Sys.Delay(500);
  Sys.Clipboard := '';    
  Sys.Keys('^u');
  v := Sys.Clipboard;            
  if (Sys.Clipboard <> vStatus) then
  begin
      Log.Error('CreateZORDR', 'Некорректный статус веб-заявки');   
  end;
end;
                           
              
// *****************************************************
// Изменить веб-заявку  
// ***************************************************** 
procedure EditWebOrders;
var
  p,w,m: String;
begin
  w := Ts;
  Sys.Keys('[F5][Apps]');
  Sys.Delay(1000);  
  Sys.Keys('[Down][Down][Down][Down][Down][Down][Down]');
  Sys.Keys('[Enter]'); 
  Sys.Delay(500); 
  p := Sys.Process('TradeService2');
  w := p.Window('TfeSingleBaseForm', 'Изменить Web-заявку (ЛС)');
  w.Activate;
  m := w.Window('TcxButton', 'Сохранить').Click;
  Sys.Delay(1000);
end;


// *****************************************************
// Проверка наличия веб-заявки в реестре веб-заявок  
// vDev - номер трейда, например '8'. Необязательный параметр
// ***************************************************** 
procedure CheckWebOrders(vWebOrder: String; vDev: String = '');
var
  p, w, m: OleVariant;   
begin
  try   
    // делаем активным окно ЗП
    w := Ts;
    w.Activate; 
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Activate; 
    
    if vDev = '8' then  
    begin
      OpenDocs; // открытие реестра веб-заявок у ССЯ  
      Sys.Keys('![Tab]![Tab]![Tab]![Tab]![Tab]![Tab]![Tab]');
    end
    else  
      OpenWebOrders; // открытие реестра заказов у ССЯ 
    
    // проверяем фильтр  
    CheckFilter;
                
    // проверяем, что веб-заявка есть на вкладке Данные
    if vDev = '8' then  
      SearchWebOrders(vWebOrder, '8')
    else  
      SearchWebOrders(vWebOrder); 
    
    //Проверяем статус заявки
    {if vDev = '8' then  
      CheckStatusWebOrders('Заказ оформлен', '8') 
    else  
      CheckStatusWebOrders('WRQST_CRTD');  }
    
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;
end;                                                     

// Поиск ДО в реестре ДО                           
procedure SearchDocPay(vDocPay: String);
var
  i, vQuantity: String;
begin
  //Смотрим количество платежных средств в до   
  vQuantity := GetQuantityTransaction(vDocPay); 
  //ввод номера последнего ДО          
  Sys.Keys(vDocPay);                   
  Sys.Keys('[F8]');
  Sys.Delay(1000);   
  
  // проверяем, что ДО есть на вкладке Данные 
  Sys.Keys('[Tab]'); 
  //проверяем что в реестре ДО (товары) количество строк с ДО 
  //столько же сколько платежных средств
  for i := 1 to vQuantity do    
  begin
    Sys.Keys('[Home][Enter]');
    Sys.Delay(100);    
    Sys.Keys('^c');
    if (Sys.Clipboard <> vDocPay) then
    begin
      Log.Error('CreateZORDR', 'На вкладке "Данные" ДО не найден');
      Exit;
    end;            
    Sys.Delay(100); 
    Sys.Keys('[Esc][Down]');  
  end;                
end;

// Проверка наличия  ДО в реестре ДО 
procedure CheckDocPay(vDocPay: String);
var
  p, w, m: OleVariant;   
begin
  try   
    // делаем активным окно реестра ДО
    w := Ts;    
    m := w.Window('TfeChainBaseForm', 'Реестр документов оплаты / товар /');
    m.Activate; 
    //переходим в поле "№ док-та"
    Sys.Keys('[Tab][Tab][Tab][Tab]');
    //проверяем фильтр
    CheckFilter;
    //поиск ДО            
    SearchDocPay(vDocPay);      
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;
end;

//выдача товара ООС
procedure GiveProduct(CodePhone);
var
  p, w, m: OleVariant;   
begin  
  //делаем окно активным
  w := Ts;
  m := w.Window('TfeChainBaseForm', 'Реестр Web-заявок (с подвалом)');  
  m.Activate;  
  //открываем меню правой кнопкой                      
  Sys.Keys('[F5][Apps]');
  Sys.Delay(1000);  
  Sys.Keys('[Up][Up][Up]');
  Sys.Keys('[Enter]');           
  Sys.Delay(500); 
  //вводим номер телефона      
  Sys.Keys('![Tab]'+CodePhone); 
  //нажимаем выдать товар
  p := Sys.Process('TradeService2');
  w := p.Window('TfeSingleBaseForm', 'Выдать товар', 1);
  m := w.Window('TcxButton', 'Сохранить').Click;  
  w := p.Window('TfeChainBaseForm', 'Документ оплаты', 1);   
  m := w.Window('TcxPageControl', '', 1);     
  m := w.Window('TcxButton', 'Далее >>');
  m.Click;
  CloseButton('Далее >>');                   
  CloseButton('Далее >>');    
  CloseButton('Сохранить');   
  //ждем появления окна выполнения транзакции 
  w := p.Window('TMessageForm', '*', 1 );     
  m := w.WaitWindow('TButton', '*', 1, 70000);
  //если окно активно закрываем его
  if m.Exists then                              
    w.Window('TButton', 'OK').Click;  
  Sys.Delay(1000);
  // когда форма открыта то клик
  ClosePreviewForm;
  Sys.Delay(1000);
end;

//Эскпорт с ТС на кассу
procedure ExportTsPos;
var
  p, w, m, vCounter: OleVariant;
begin
  LogInProgrammer; 
  w := Ts;
  w.Activate;
  
  //открытие окна "Список приложений"   
  OpenTreeList;                                                      
  w.Window('TcxTreeList').DblClick(74, 210);
  w.Window('TcxTreeList').DblClick(104, 411);  
  m := w.Window('TfeChainBaseForm');
  m.Activate; 
  
  //выбираем всё, кроме справочника номенклатур и пользователей
  Sys.Keys('[Apps]');
  Sys.Delay(500);  
  Sys.Keys('[Down]');
  Sys.Keys('[Enter]'); 
  
  //нажатие кнопки "далее"
  m.Window('TcxButton', 'Далее >>').Click;
  
  //проверка активности кнопки "закрыть"                               
  w := Ts;
  m := w.Window('TfeChainBaseForm', 'Экспорт в TS POS');   
  m := m.Window('TcxButton', 'Закрыть');
          
  //если кнопка "закрыть" не видна, то ждем
  vCounter := 0;
  while not m.enabled do
  begin
    if vCounter > 39 then
    begin
      Log.Error('CreateZORDR', 'Превышено ожидание 40 секунд');
      exit;
    end;          
    vCounter := vCounter + 1;
    Sys.Delay(1000);
  end;
  
 //нажатие кнопки "закрыть"                             
  m.Click;
  //выход с трейда                            
  LogOut; 
end;
                          
//Сторнирование последней операции купона 
procedure StornoOperationCoupon(vNumberCoupon: String);
var
   p, w: OleVariant;
   vOperation: String;
begin
   //вход в трейд
   LogInProgrammer;

   //открытие окна "Список приложений"   
   OpenTreeList;

   //Открытие окна "информация по карте"
   p := pTs;
   w := p.Window('TfrmMain', 'Trade Service');
   w.Activate;
   w.Window('TcxTreeList').Click(58, 44);
   w.Window('TcxTreeList').DblClick(55, 280);
   w.Window('TcxTreeList').DblClick(80, 350);
   w.Window('TcxTreeList').DblClick(100, 514);
   Sys.Keys(vNumberCoupon);
   Sys.Keys('[Tab][Tab][Right]');
   Sys.Delay(2000);
   Sys.Keys('[Tab][Tab][Tab][Tab]');
   Sys.Delay(1000); 

   //узнаем название последней транзакции
   Sys.Keys('[Home][Right][Right][Right][Enter]');
   Sys.Clipboard := '';
   Sys.Keys('^u');
   vOperation := Sys.Clipboard;

   //если транзакция "списание с блокировакой", то отменяем эту транзакцию   
   if (vOperation = 'Списание с блокировкой') then
   begin
     Sys.Keys('[Esc][Apps][Up][Up][Enter]'); 
     Sys.Delay(3000);
     Sys.Keys('test[Enter]');
     w := p.Window('TfrmErrorDlg', 'Ошибка');     
     w.Activate;
     Sys.Keys('[Enter]');
     Sys.Delay(2000);
   end;                                          
   LogOut;
end;

//Сторнирование последней операции эльдочека 
procedure StornoOperationEldoCheck(vNumberCheck: String);
var
   p, w: OleVariant;
   vOperation: String;
begin
   //вход в трейд
   LogInProgrammerDelivery;

   //открытие окна "Список приложений"   
   OpenTreeList;

   //Открытие окна "информация по карте"
   p := pTs;
   w := p.Window('TfrmMain', 'Trade Service');
   w.Activate;
   w.Window('TcxTreeList').Click(58, 44);
   w.Window('TcxTreeList').DblClick(55, 280);
   w.Window('TcxTreeList').DblClick(80, 350);
   w.Window('TcxTreeList').DblClick(100, 514);
   Sys.Keys(vNumberCheck);
   Sys.Keys('[Tab][Tab][Right]');
   Sys.Delay(2000);
   Sys.Keys('[Tab][Tab][Tab][Tab]');
   Sys.Delay(1000); 

   //узнаем название последней транзакции
   Sys.Keys('[Home][Right][Right][Right][Enter]');
   Sys.Clipboard := '';
   Sys.Keys('^u');
   vOperation := Sys.Clipboard;

   //если транзакция "Зачисление средств", то отменяем эту транзакцию   
   if (vOperation = 'Зачисление средств') then
   begin
     Sys.Keys('[Esc][Apps][Up][Up][Enter]'); 
     Sys.Delay(1000);
     Sys.Keys('test[Enter]');
     w := p.Window('TfrmErrorDlg', 'Ошибка');     
     w.Activate;
     Sys.Keys('[Enter]');
     Sys.Delay(2000);
   end;                                          
   LogOutDelivery;
end;

//Закрытие окна сообщения об отправке транзакции
procedure CloseMessageForm;
var
  p, w: OleVariant;   
begin
  p := pTs;
  w := p.Window('TMessageForm', 'TradeService');
  w.Activate;       
  w.Window('TButton', 'OK').Click;
  Sys.Delay(7000);
end;  

//Закрытие печатной формы
procedure ClosePreviewForm;
var
   p, w: OleVariant;
begin                                       
   p := pTs; 
   //ждем появление окна формы   
   w := p.WaitWindow('TfrxPreviewForm', 'Preview', 1, 40000);  

   //если окно активно то закрываем его
   if w.Exists then 
   begin        
     Sys.Delay(1000);          
     w := p.Window('TfrxPreviewForm', 'Preview');
     w.Activate;
     Sys.Keys('[Esc]');
     Sys.Delay(4000); 
   end
   else
      Log.Error('ClosePreviewForm', 'Не удалось закрыть печатную форму');
end; 

//сделать активным окно "штрих-код"
procedure ActiveWindowProduct;
var 
  p, w, m: OleVariant; 
  vZORDR: string;
begin
  try
    Sys.Process('TradeService2').Window('TfrmMain', 'Trade Service - [Магазин - Документооборот] - [Заказ покупателя]', 1).Window('TfeChainBaseForm', 'Заказ покупателя', 1).Window('TcxCustomInnerTextEdit', '', 1).Click;
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//сделать активным окно список товаров, начало строчки первого твоара
procedure ActiveWindowListProduct;
var 
  w,m: OleVariant; 
  vZORDR: string;
begin
  try
    ActiveWindowProduct;
    Sys.Keys('[Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][PageUp][Home]'); 
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end;

//Проверка добавления первого товара
procedure CheckAddProduct(nn: String);
var
    p, w: OleVariant;
    // vGood - нн товара;
    vGood: string;   
begin
    p := pTs; 
    w := p.Window('TfrmMain', '*');
    w.Activate;  

    // проверка добавления первого товара
    //Sys.Keys('[Tab][Tab][Tab][Tab][Tab][Tab][Home][Right]');
    Sys.Keys('[Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][Tab][Home][Right]');
    Sys.Keys('^0^c');
    vGood:=StrToInt(VarToString(Sys.Clipboard));
    if (nn <> vGood) then
    begin
        Log.Error('CreateZORDR', 'Не удалось добавить первый товар');
    end;
end;

//Увеличиваем количество до двух
procedure AddProductQuantity(vQuantity: String);
var
    p, w, m: OleVariant;
begin
    w := Ts;
    w.Activate;
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Activate;

    //увеличиваем количество до двух стрелочкой (Enter + Вверх)
    Sys.Keys('[Right][Right][Enter]' + vQuantity + '[Enter]');
end;
  
//Проверка общей суммы заказа  
procedure CheckSumOrder(vQuantity1: String; vQuantity2: String = '0');
var
    p, w, m: OleVariant;
    // vWaitSum - ожидаемая сумма; 
    // vSumOrder - полученная сумма заказа;
    vWaitSum, vSumOrder: string;   
begin
    Sys.Keys('[Home][Right][Right][Right][Right][Right]'); //[Tab][Tab][Tab][Tab][Tab][Tab]
    Sys.Keys('^0^c');

    //проверка суммы 2-ого товара. Если его нет, то сумма равна 0
    vWaitSum := (StrToInt(VarToString(Sys.Clipboard)) * vQuantity2); 

    //переходим ко первому товару
    Sys.Keys('[Up]');
    Sys.Keys('^0^c');

    // Проверка общей суммы заказа 
    vWaitSum := vWaitSum + (StrToInt(VarToString(Sys.Clipboard)) * vQuantity1);
    Sys.Clipboard := 'GETSUMMARY=Цена'; 
    Sys.Keys('^u');       
    vSumOrder := StrToInt(VarToString(Sys.Clipboard));

    if (vWaitSum <> vSumOrder) then
    begin 
       Log.Error('CreateZORDR', 'Общая сумма заказа не пересчиталась/пересчитана неверно после второго товара');
    end;
end;

//добавление экспресс-сервис в ЗП
procedure CheckExpressService;
var 
  p,w,m: OleVariant; 
  vZORDR: string;
begin
  try
    w := Ts;                                     
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');

    //нажать на кнопку "ЭС 3 года"
    m.Window('TcxButton', 'ЭС 3 года').Click;
    p := pTs;
    w := p.WaitWindow('TfeChainBaseForm', 'Выбор аксессуаров/услуг', 1, 500);
    if (w.Exists) then
    begin
      w.Activate;
      w.Window('TcxButton', 'Отмена').Click;
    end;
  except
      Log.Error('Exception', ExceptionMessage);
  end;
end;

//вид платежа - эльдорассрочка
procedure CheckPayType;
var 
  p,w,m: OleVariant; 
  vZORDR: string;
begin
  try
    ActiveWindowProduct;
    Sys.Keys('[Tab][Tab]');

    //В качестве вида платежа выбрать "ЭЛЬДОРАССРОЧКА"               
    Sys.Clipboard := 'SELECT=ЭЛЬДОРАССРОЧКА'; 
    Sys.Keys('^u');
  except
    Log.Error('Exception', ExceptionMessage);
  end;
end; 

//Создание ЗП
//выбор склада
procedure SelectSklad;
var 
  p,w: OleVariant;
begin
  try
    //Выбираем склад AX31-Чехов-0090
    p := pTs;
    Sys.Keys('[Home][Right][Right][Right][Right][Right][Right]');
    Sys.Keys('[ENTER]');  
    w := p.Window('TcxPopupEditPopupWindow');
    w.Activate;                                                  
    Sys.Keys('[Down][Down][Down][Down][Enter]');   // для первого трейда
    //Sys.Keys('[Down][Down][Enter]');   // для 13 трейда
  except
      Log.Error('Exception', ExceptionMessage);
  end;
end;

//проставить галочку "Доставка" в ЗП
procedure CheckBoxDelivery;
var 
  p,w,m: OleVariant; 
begin
  try
    //проставить галочку "Доставка"
    p := pTs;
    Sys.Keys('[Right][Right][Right][Right][Right][Right][Right][Right][Right]');
    Sys.Keys(' ');
  except
      Log.Error('Exception', ExceptionMessage);
  end;
end;
    
//ввод нн в ЗП
procedure AddProduct(nn1, vQuantity1: String; nn2: String = '0'; vQuantity2: String = '0');var
  p, w, m: OleVariant; 
begin
  // вводим первый товар
  ActiveWindowProduct;
  Sys.Keys(nn1 + '[Enter]');

  // проверка добавления первого товара
  CheckAddProduct(nn1);

  // увеличиваем количество до двух 
  AddProductQuantity(vQuantity1); 

  // Проверка общей суммы заказа 
  CheckSumOrder(vQuantity1);
         
  // вводим второй товар
  if (nn2 <> '0') then
  begin
    ActiveWindowProduct;                        
    Sys.Keys(nn2 + '[Enter]');

    // проверка добавления второго товара
    CheckAddProduct(nn2);

    // увеличиваем количество до двух вводом цифры
    AddProductQuantity(vQuantity2);

    // Проверка общей суммы заказа 
    CheckSumOrder(vQuantity1,vQuantity2);
  end                             
end; 

//Сохранение ЗП
procedure SavePF;
var
    p, w, m: OleVariant;   
begin
    //Переход на вкладку "Параметры документа"
    w := Ts;
    w.Activate;  
    m := w.Window('TfeChainBaseForm', 'Заказ покупателя');
    m.Window('TcxButton', 'Далее >>').Click;
    p := pTs; 
    
    //Закрытие всплывающего окна
    Sys.Keys('[Tab][Tab][Tab][Right][Right] [Down][Down][Down]' + 
    '[Down][Down][Down][Down][Down][Down][Down][Down] [Tab][Enter]');
    Sys.Delay(1000);
    
    //Сохранение ЗП 
    m.Window('TcxButton', 'Сохранить').Click;                                           
end;  

//Сравнение ПФ
procedure ComparePF(cFilePath: String);
var
    p, w: OleVariant;
    vPicture: string;   
begin  
    //Спускаемся вниз ПФ
    p := pTs; 
    w := p.Window('TfrxPreviewForm', 'Preview');
    w.Activate;                       
    Sys.Keys('[PageDown]');
    
    //Сравнение ПФ
    //vPicture := w.Window('TfrxPreviewWorkspace', '', 1).Rect(252,46,717,175);
    vPicture := w.Window('TfrxPreviewWorkspace', '', 1).Rect(270,50,1050,212);
    Regions.SaveToFile(vPicture,cFilePath + 'PF_Test_1.bmp');
    if not Regions.Compare(cFilePath + 'PF_Test_1.bmp',
                          cFilePath + 'PF_True_1.bmp')
    then 
    begin  
      Log.Error('CreateZORDR', 'Ошибка в ПФ: PF_True_1');
    end;

    vPicture := w.Window('TfrxPreviewWorkspace', '', 1).Rect(252,648,717,125);
    vPicture := w.Window('TfrxPreviewWorkspace', '', 1).Rect(270,444,1050,575);  
    Regions.SaveToFile(vPicture,cFilePath + 'PF_Test_2.bmp');

    if not Regions.Compare(cFilePath + 'PF_Test_2.bmp',                  
                           cFilePath + 'PF_True_2.bmp')
    then 
      begin  
        Log.Error('CreateZORDR', 'Ошибка в ПФ: PF_True_2');
      end; 
end;

//Закрытие ПФ
procedure CloseUpPF;
var
    p, w: OleVariant;
begin  
    // закрытие ПФ и выход из трейда
    p := pTs; 
    w := p.Window('TfrxPreviewForm', 'Preview');
    w.Activate;

    //w.Window('TToolBar').Click(501, 16);
    w.Window('TToolBar').Activate;
    Sys.Keys('[Esc]');
    w := p.Window('TfrmLogin', 'Вход в программу');
    w.Activate;
    Sys.Keys('[Tab][Tab][Tab][Enter]');
    Sys.Delay(1000);   
end;

//Сохранение ЗП
procedure CheckPF(cFilePath: String);
var
    p, w, m: OleVariant;
    vPicture: string;   
begin 
    SavePF;  
    ComparePF(cFilePath);    
    CloseUpPF;
end;

//Проверка создания ЗП
procedure CheckCreateOrder;
var
  p, w, m: OliVariant;
  vOrderID: string;
begin
  try   
    vOrderID := GetMaxOrder('tcs');  
    CheckListDoc(vOrderID, 'ZORDR', 'tcs');

    // проверяем статус "Заказ оформлен"
    if (GetOrderStatus(vOrderID)<>'ZORDR_OPEN') then
    begin
        Log.Error('CreateZORDR', 'ЗП не в статусе "Заказ оформлен"');
    end;          
  except
    Log.Error('Exception', ExceptionMessage);
    LogOut;
  end;        
end;

//нажатие кнопки при выдаче товара ООС
procedure CloseButton(Button: String);
var
  p, w, m, vCounter: OleVariant;   
begin  
  p := pTs;               
  w := p.Window('TfeChainBaseForm', 'Документ оплаты', 1);      
  m := w.Window('TcxButton', Button);
  
  vCounter := 0;
  while not m.enabled do
  begin
    if vCounter > 39 then
    begin
      Log.Error('CloseButton', 'Превышено ожидание 40 секунд');
      exit;
    end;          
    vCounter := vCounter + 1;
    Sys.Delay(1000);
  end;
  m.Click;
  Sys.Delay(1000);
end; 

//заполнение полей при создании упрощенного АРБ
procedure CreatUARB(vOrderID: String);
var
    p, w, m: OleVariant;   
begin   
    w := Ts;                 
    m := w.Window('TfeChainBaseForm', 'Обмен товара надлежащего качества');
    m.Activate;              
    Sys.Keys(vOrderID + '[Enter]');
    Sys.Delay(1000);
    Sys.Keys('[Tab][Tab][Tab][Tab][Tab]7[Enter]');
    m.Window('TcxButton', 'Далее >>').Click; 
    m.Window('TcxButton', 'Далее >>').Click; 
    m.Window('TcxButton', 'Сохранить').Click;

    //закрытие печатных форм
    ClosePreviewForm;
end; 

//подтверждение перемещения в "реестре черновиков внутренних перемещений"
//при создании упрощенного арб
procedure ChangeInTransfer;
var
  w, vNumberDoc: OleVariant;
begin
  //делаем активным окно черновиков внутренних перемещений
  w := Ts; 
  w.Window('TfeChainBaseForm', 'Реестр черновиков внутренних перемещений').Activate;

  //узнаем последний документ ССЯ (документ перемещения)
  vNumberDoc := GetMaxOrder('tcss');

  //вводим номер документа в реестр внутренрих перемещений
  Sys.Keys(vNumberDoc); 
  Sys.Keys('[F8]');
  Sys.Delay(1000);

  //Нажимаем правой кнопкой по документу перемещения,
  //подтверждаем перемещение
  Sys.Keys('[Tab][Apps][Up][Up][Enter]');
  
  //сохраняем
  Sys.Process('TradeService2').Window('TfeSingleBaseForm', 'Подтверждение документа перемещения').Window('TcxButton', 'Сохранить').Click;
  Sys.Delay(1000); 
end;  

